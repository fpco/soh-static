<!DOCTYPE html>
<p>Should cover:</p><ul><li>Throwing exceptions</li><li>Catching exceptions</li><li>Exceptions in pure code</li><li>Difference between <code>throw</code> and <code>throwIO</code></li><li>Async exceptions</li><li>Catching all exceptions</li><li>http://www.yesodweb.com/blog/2014/05/exceptions-cont-monads</li><li>https://www.fpcomplete.com/user/snoyberg/general-haskell/exceptions/exceptions-and-monad-transformers</li><li>https://www.fpcomplete.com/user/snoyberg/general-haskell/exceptions/catching-all-exceptions</li><li>Exceptions problems. Can't wrap. Can't have two exceptions. No idea how exception was thrown.</li><li><a href="http://stackoverflow.com/questions/27346380/how-to-wrap-exceptions-to-provide-context">Wrap exceptions to provide context</a></li><li><a href="http://www.reddit.com/r/haskell/comments/2ety9f/new_blog_post_dealing_with_asynchronous/ck3fkbp">General dislike of exceptions</a></li><li>enclosed-exceptions</li><li>Examples of code-conversion between all possible error styles</li><li>unexceptionalio and errors libraries</li></ul>